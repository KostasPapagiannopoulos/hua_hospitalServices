package gr.services.huahospital;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;


public class Appointment 
{
	private int appointmentID;
	private String patientName;
	private String patientSurname;
	private int AMKA;
	private String insuranceFund;
	private String infirmary;
	private String diseaseDetails;
	private String appointmentDate;
	private String appointmentTime;
	private int appointmentEmergency;
	private String rejectReasons;
	private String appointmentAccelerate;
	
	public Appointment() 
	{
	}
	
	public String insertAppointment()
	{
		Connection conn = null;
		Statement statement = null;
		String SQLStr;
		String retString = "";
		
			try
			{
				Class.forName("com.mysql.jdbc.Driver").newInstance();
					
				conn = DriverManager.getConnection("jdbc:mysql://" + "62.217.125.30:3306/itp14105", "itp14105", "$12345$");	
				SQLStr = "INSERT INTO `itp14105`.`appointment` " + "VALUES ('" + getAppointmentID() + "', '" + getPatientName() + "', '" + getPatientSurname() + "', '" + getAMKA() + "',  '" 
				+ getInsuranceFund() + "', '" + getInfirmary() + "', '" + getDiseaseDetails() + "', '"+ getAppointmentDate() + "', '" + getAppointmentTime() + "', '" + getAppointmentEmergency() + "', '"
				+ getRejectReasons() + "', '" + getAppointmentAccelerate() + "');";				
				statement = conn.createStatement();
				statement.executeUpdate(SQLStr);
					
				retString = "Το ραντεβού καταχωρήθηκε επιτυχώς!";
			}
			catch (SQLException sqlEx)
			{
					sqlEx.printStackTrace();
			}
			catch (ClassNotFoundException classNotFound)
			{
					classNotFound.printStackTrace();
			}
			catch (Exception ex)
			{
					ex.printStackTrace();
			}
			finally
			{
				try
				{
					if (statement != null)
					{
						statement.close();
					}
				}
				catch (final SQLException sqlEx)
				{
					sqlEx.printStackTrace();
				}
			}
			return retString;
		
	}
	
	@WebMethod
	public ArrayList<Appointment> returnAllAppointments()
	{
		Connection conn = null;
		Statement statement = null;
		String SQLStr = "";
		ResultSet rs = null;
		ArrayList<Appointment> arrList = new ArrayList<Appointment>();
		
			SQLStr = "SELECT * FROM `itp14105`.`appointment`;";
			try
			{
				Class.forName("com.mysql.jdbc.Driver").newInstance();
				conn = DriverManager.getConnection("jdbc:mysql://" + "62.217.125.30:3306/itp14105", "itp14105", "$12345$");
				statement = conn.createStatement();
				rs = statement.executeQuery(SQLStr);
				while(rs.next())
				{
					Appointment appointmentInstance = new Appointment();
					appointmentInstance.setAppointmentID(rs.getInt("appointmentID"));
					appointmentInstance.setPatientName(rs.getString("patientName"));
					appointmentInstance.setPatientSurname(rs.getString("patientSurname"));
					appointmentInstance.setAMKA(rs.getInt("AMKA"));
					appointmentInstance.setInsuranceFund(rs.getString("insuranceFund"));
					appointmentInstance.setInfirmary(rs.getString("infirmary"));
					appointmentInstance.setDiseaseDetails(rs.getString("diseaseDetails"));
					appointmentInstance.setAppointmentDate(rs.getString("appointmentDate"));
					appointmentInstance.setAppointmentTime(rs.getString("appointmentTime"));
					appointmentInstance.setAppointmentEmergency(rs.getInt("appointmentEmergency"));
					appointmentInstance.setRejectReasons(rs.getString("rejectReasons"));
					appointmentInstance.setAppointmentAccelerate(rs.getString("appointmentAccelerate"));
					
					arrList.add(appointmentInstance);
				}
			}
			catch (SQLException sqlEx)
			{
				System.err.println(sqlEx.getMessage());
			}
			catch (ClassNotFoundException classNotFound)
			{
				System.err.println(classNotFound.getMessage());	
			}
			catch (Exception ex)
			{
				System.err.println(ex.getMessage());
			}
			finally
			{
				try
				{
					if (statement != null)
					{
						statement.close();
					}
				}
				catch(final SQLException sqlEx)
				{
					System.err.println(sqlEx.getMessage());
				}
			}
		
			return arrList;
	}

	public int getAppointmentID() 
	{
		return appointmentID;
	}

	public void setAppointmentID(int appointmentID) 
	{
		this.appointmentID = appointmentID;
	}

	public String getPatientName() 
	{
		return patientName;
	}

	public void setPatientName(String patientName) 
	{
		this.patientName = patientName;
	}

	public String getPatientSurname() 
	{
		return patientSurname;
	}

	public void setPatientSurname(String patientSurname) 
	{
		this.patientSurname = patientSurname;
	}

	public int getAMKA() 
	{
		return AMKA;
	}

	public void setAMKA(int aMKA) 
	{
		AMKA = aMKA;
	}

	public String getInsuranceFund() 
	{
		return insuranceFund;
	}

	public void setInsuranceFund(String insuranceFund) 
	{
		this.insuranceFund = insuranceFund;
	}

	public String getInfirmary() 
	{
		return infirmary;
	}

	public void setInfirmary(String infirmary) 
	{
		this.infirmary = infirmary;
	}

	public String getDiseaseDetails() 
	{
		return diseaseDetails;
	}

	public void setDiseaseDetails(String diseaseDetails) 
	{
		this.diseaseDetails = diseaseDetails;
	}

	public String getAppointmentDate() 
	{
		return appointmentDate;
	}

	public void setAppointmentDate(String appointmentDate) 
	{
		this.appointmentDate = appointmentDate;
	}

	public String getAppointmentTime() 
	{
		return appointmentTime;
	}

	public void setAppointmentTime(String appointmentTime) 
	{
		this.appointmentTime = appointmentTime;
	}

	public int getAppointmentEmergency() 
	{
		return appointmentEmergency;
	}

	public void setAppointmentEmergency(int appointmentEmergency) 
	{
		this.appointmentEmergency = appointmentEmergency;
	}

	public String getRejectReasons() 
	{
		return rejectReasons;
	}

	public void setRejectReasons(String rejectReasons) 
	{
		this.rejectReasons = rejectReasons;
	}

	public String getAppointmentAccelerate() 
	{
		return appointmentAccelerate;
	}

	public void setAppointmentAccelerate(String appointmentAccelerate) 
	{
		this.appointmentAccelerate = appointmentAccelerate;
	}
}
